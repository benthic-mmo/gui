language: cpp

env:
  global:
    - secure: "IhIDd18aAy80xmR059CK0Mid/7HQDDJY1zUiq0yP5ZVmuZBh+Ui6jFaFqR3wD3C0GIFvTFGEVYiQYOX7BO7XFOhM0GIK/TOtsyamu3QuhZq0Tx0RrzQIP8giCcEe51j6/Y3LmuWaCLE9P1axn0ub8Nq0y0yhUaQ3H4SZ2fcIWKu8oaUk6FNDYwHA1ARhJCiBGQmSyYtRdAH4RABLL7G8GyS2f+cV529Jy/9w7QBT/x4Oy0fKKfWiCeThkN27apHR0ri7s+B5iA5AAF5erIQURH97qoTN0AzuBhj+mG17wTZ5E7GjshJh36yeIJVpBjaODx0I3M5kVSKaM3hCG0l8raRKq5i5eoyAs6NoV9d9vKARRVsi4XneZxkSDGSHivTsnfvXj6iVUfgp6WLwoZG4oQJ6h6M8g230PMrg7s+HxVd+mxgY8LG3ZJSPm9uWy9UJWlObu8bQUgML4PX0e2V53tsPuWSAKJ8lxGjjYISsqoxC4cBDxu5BOyYi+LqQiOB0eRUJkY3Fb3wKXAlZBOZ4orK3VRh6bL0KhZpYZDO1PgcBMJnCGag5djjblmj2bSiEfkJN0UX4rB69W+lwcZQ0wZ1HkpoXnQE9kVnhaJBighNQNJbrj+fpOQJMWZ+IsKEnCFdHnQ8XCOEBHVIV6dLvcxf1PtjwMh7vS1FQTXJhbyE="

jobs:
  include:
    - stage: test
      os: linux
      dist: focal
      compiler: gcc
      before_script:
        - sudo apt-get -y install libz-dev libpng-dev libsfml-dev libfreetype6-dev libglew-dev liblua5.2-dev libglu1-mesa-dev g++-8
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8
      script: sudo make install

    - stage: test
      os: linux
      dist: focal
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
            - g++-9
            - libstdc++-9-dev
      before_script:
        - sudo apt-get -y install libz-dev libpng-dev libsfml-dev libfreetype6-dev libglew-dev liblua5.2-dev libglu1-mesa-dev clang-8
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8
      script: sudo make install

    - stage: test
      os: osx
      osx_image: xcode11.6
      compiler: clang
      before_script:
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install zlib libpng sfml freetype glew lua llvm
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_C_COMPILER=/usr/local/opt/llvm/bin/clang -DCMAKE_CXX_COMPILER=/usr/local/opt/llvm/bin/clang++
      script: sudo make install

    - stage: test
      os: windows
      compiler: gcc
      before_script:
        - choco install -y visualstudio2017-workload-vctools
        - cd dependencies
        - unzip windows-dependencies-vs2017-32.zip
        - DEPENDENCIES_FOLDER=`pwd`
        - cd ..
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_PREFIX_PATH=${DEPENDENCIES_FOLDER}
      script:
        - export PATH="/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin:${PATH}"
        - MSBuild.exe lxgui.sln //nologo //p:Configuration=Release

    - stage: deploy
      os: linux
      compiler: gcc
      before_script:
        - sudo apt-get -y install doxygen
      script:
        - if [[ "$TRAVIS_BRANCH" != "master" ]]; then travis_terminate 0; fi
        - if [[ "$TRAVIS_PULL_REQUEST" = "true" ]] ; then travis_terminate 0; fi
        - cd $TRAVIS_BUILD_DIR
        - .ci/setup-git.sh || travis_terminate 1
        - .ci/generate-doc.sh || travis_terminate 1
